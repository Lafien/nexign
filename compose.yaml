services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=workerdb'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=user'
    ports:
      - '5432:5432'
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      SPRING_KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    ports:
      - '9092:9092'
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    networks:
      - app-network

  app:
    image: workerapp
    build:
      context: .
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/workerdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - '8080-8081:8080'
    networks:
      - app-network
    deploy:
      replicas: 2
    depends_on:
      - postgres
      - kafka
      - redis

networks:
  app-network:
